# Generated by Django 5.0.1 on 2024-12-30 06:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('logo', models.ImageField(upload_to='organizations/')),
                ('website', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubEventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='sub_events/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('INTRA', 'Intra College'), ('INTER', 'Inter College')], max_length=5)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('registration_start', models.DateTimeField()),
                ('registration_end', models.DateTimeField()),
                ('venue', models.CharField(max_length=200)),
                ('max_participants', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cover_image', models.ImageField(upload_to='events/')),
                ('banner_image', models.ImageField(upload_to='events/banners/')),
                ('rules_document', models.FileField(blank=True, null=True, upload_to='events/rules/')),
                ('schedule_file', models.FileField(blank=True, null=True, upload_to='events/schedules/')),
                ('budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('instagram_link', models.URLField(blank=True, null=True)),
                ('facebook_link', models.URLField(blank=True, null=True)),
                ('twitter_link', models.URLField(blank=True, null=True)),
                ('linkedin_link', models.URLField(blank=True, null=True)),
                ('chairpersons', models.ManyToManyField(related_name='chaired_events', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('event_heads', models.ManyToManyField(related_name='headed_events', to=settings.AUTH_USER_MODEL)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.councilmember')),
                ('vice_chairpersons', models.ManyToManyField(related_name='vice_chaired_events', to=settings.AUTH_USER_MODEL)),
                ('collaborating_organizations', models.ManyToManyField(blank=True, to='events.organization')),
            ],
        ),
        migrations.CreateModel(
            name='SubEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('category', models.CharField(blank=True, choices=[('SPORTS', 'Sports'), ('CULTURAL', 'Cultural'), ('TECHNICAL', 'Technical'), ('ACADEMIC', 'Academic')], max_length=20, null=True)),
                ('participation_type', models.CharField(blank=True, choices=[('SOLO', 'Solo'), ('DUO', 'Duo'), ('GROUP', 'Group')], max_length=10, null=True)),
                ('current_stage', models.CharField(blank=True, choices=[('REGISTRATION', 'Registration'), ('PRELIMS', 'Preliminaries'), ('QUARTERS', 'Quarter Finals'), ('SEMIS', 'Semi Finals'), ('FINALS', 'Finals')], default='REGISTRATION', max_length=20, null=True)),
                ('schedule', models.DateTimeField(blank=True, null=True)),
                ('venue', models.CharField(blank=True, max_length=200, null=True)),
                ('max_participants', models.IntegerField(blank=True, null=True)),
                ('min_team_size', models.IntegerField(blank=True, default=1, null=True)),
                ('max_team_size', models.IntegerField(blank=True, default=1, null=True)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('registration_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rules', models.TextField(blank=True, null=True)),
                ('scoring_criteria', models.JSONField(blank=True, default=dict, null=True)),
                ('prize_pool', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('allow_mixed_department', models.BooleanField(default=False)),
                ('allow_mixed_year', models.BooleanField(default=False)),
                ('allow_mixed_division', models.BooleanField(default=False)),
                ('double_trouble_allowed', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_events', to='events.event')),
                ('sub_heads', models.ManyToManyField(blank=True, related_name='sub_headed_events', to=settings.AUTH_USER_MODEL)),
                ('images', models.ManyToManyField(blank=True, to='events.subeventimage')),
            ],
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(blank=True, max_length=100, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('department', models.CharField(blank=True, choices=[('COMPUTER', 'Comps'), ('IT', 'IT'), ('AIML', 'AIML'), ('DE', 'DE'), ('OTHER', 'Other')], max_length=100, null=True)),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
                ('division', models.CharField(blank=True, max_length=10, null=True)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('payment_status', models.BooleanField(default=False)),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_stage', models.CharField(choices=[('REGISTRATION', 'Registration'), ('PRELIMS', 'Preliminaries'), ('QUARTERS', 'Quarter Finals'), ('SEMIS', 'Semi Finals'), ('FINALS', 'Finals')], default='REGISTRATION', max_length=20)),
                ('has_submitted_files', models.BooleanField(default=False)),
                ('team_leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='led_registrations', to=settings.AUTH_USER_MODEL)),
                ('team_members', models.ManyToManyField(blank=True, related_name='team_registrations', to=settings.AUTH_USER_MODEL)),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.subevent')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='submissions/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'mp4', 'mov'])])),
                ('file_type', models.CharField(max_length=10)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventregistration')),
            ],
        ),
        migrations.CreateModel(
            name='EventScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(blank=True, choices=[('REGISTRATION', 'Registration'), ('PRELIMS', 'Preliminaries'), ('QUARTERS', 'Quarter Finals'), ('SEMIS', 'Semi Finals'), ('FINALS', 'Finals')], max_length=20, null=True)),
                ('score_type', models.CharField(blank=True, choices=[('WINNER', 'Winner'), ('RUNNER_UP', 'Runner Up')], max_length=20, null=True)),
                ('criteria_scores', models.JSONField(blank=True, default=dict, null=True)),
                ('total_score', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_bye', models.BooleanField(default=False)),
                ('points_awarded', models.IntegerField(blank=True, default=0, null=True)),
                ('event_registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventregistration')),
                ('judge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judged_scores', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.subevent')),
            ],
            options={
                'unique_together': {('sub_event', 'event_registration', 'stage', 'judge')},
            },
        ),
        migrations.CreateModel(
            name='EventDraw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('REGISTRATION', 'Registration'), ('PRELIMS', 'Preliminaries'), ('QUARTERS', 'Quarter Finals'), ('SEMIS', 'Semi Finals'), ('FINALS', 'Finals')], max_length=20)),
                ('schedule', models.DateTimeField()),
                ('venue', models.CharField(max_length=200)),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team1_draws', to='events.eventregistration')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team2_draws', to='events.eventregistration')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_draws', to='events.eventregistration')),
                ('sub_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.subevent')),
            ],
            options={
                'unique_together': {('sub_event', 'stage', 'team1', 'team2')},
            },
        ),
    ]
